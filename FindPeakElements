package newproblems;

public class FindPeakElements {
	
	public int findPeakIndex(int[] num){
		
		if (num == null || num.length == 0){
			return -1;
		}
		
		int N = num.length;
		int lo = 0;
		int hi = N - 1;
		
		return findHelper(num, lo, hi);
		
	}
	
	private int findHelper(int[] num, int lo, int hi){
		
		int N = num.length;
		
		int mid = lo + (hi - lo)/2;
		
		if (mid == 0 && num[mid + 1] < num[mid]){
			return mid;
		}
		
		if (mid == N - 1 && num[mid - 1] < num[mid]){
			return mid;
		}
		
		if (num[mid - 1] < num[mid] && num[mid + 1] < num[mid]){
			return mid;
		}
		
		if (num[mid - 1] > num[mid]){
			return findHelper(num, lo, mid - 1);
		}
		
		else{
			return findHelper(num, mid + 1, hi);
		}
		
	}

}
